# -*- coding: utf-8 -*-
"""Lab Assignment 01

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19cUqxzs5nvLuGF7lVq3M6wMtydVCs5ZS

**Task 01**
"""

# number of Task
# Task 01

import numpy

matrix = []
with open("T1 input1.txt") as f:
  line = f.readlines()

for k in line:
  matrix.append(k.split())
row, column = len(matrix), len(matrix[0])
for i in range(row):
  for j in range(column):
    if matrix[i][j] == "Y":
      matrix[i][j] = 1
    else:
      matrix[i][j] = 0

visited = numpy.zeros((row, column))
track_count = 0


def tracker(matrix, visited, a,b):
  if not (0 <= a < row) or not (0 <= b < column) or matrix[a][b] == 0 or visited[a][b] == 1:
    return 0
  else:
    acount =1
    visited[a][b] = 1
    for i in range(a-1, a+2):
      for j in range (b-1, b+2):
        if a!= i or b!= j:
          acount += tracker(matrix, visited, i, j)
    return acount

for i in range(row):
  for j in range(column):
    track_count = max(track_count, tracker(matrix, visited, i, j))
print(track_count)

"""Task **02**"""

# number of Task
# Task 02

import numpy
from collections import deque as dq

city = []
with open("T2 input1.txt") as f:
  line = f.readlines()

row, column = int(line[0]), int(line[1])
for k in line[2:]:
  city.append(k.split())

visited = numpy.zeros((row, column))

homo = []
non_homo = dq()
time = 0

for i in range(row):
  for j in range(column):
    if city[i][j] == "H":
      homo.append((i,j))
    elif city[i][j] == "A":
      non_homo.append([i,j,time])

non_homo_atck_area = [(0,1), (0,-1), (1,0), (-1,0)]

while non_homo:
  non_homo_x, non_homo_y, time = non_homo.popleft()
  visited[non_homo_x][non_homo_y] = 1
  for area_x, area_y in non_homo_atck_area:
    if 0 <= non_homo_x + area_x < row and 0 <= non_homo_y + area_y < column and city[non_homo_x + area_x][non_homo_y + area_y] == "H" and visited[non_homo_x][non_homo_y] == 1:
      visited[non_homo_x + area_x][non_homo_y + area_y] = 1
      city[non_homo_x + area_x][non_homo_y + area_y] = "A"
      non_homo.append([non_homo_x + area_x, non_homo_y + area_y, time + 1])
      homo.remove((non_homo_x + area_x, non_homo_y + area_y))


homo_left = 0
for i in range(row):
  for j in range(column):
    if city[i][j] == "H":
      homo_left += 1

print("Time:", time, "minutes")

if homo_left == 0:
  print("No one survived")
else:
  print(homo_left, "survived")